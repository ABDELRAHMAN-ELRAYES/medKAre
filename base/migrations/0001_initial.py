# Generated by Django 4.2.11 on 2024-04-23 21:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('doctor_id', models.IntegerField(primary_key=True, serialize=False)),
                ('doctor_fname', models.CharField(blank=True, db_column='doctor_Fname', max_length=64, null=True)),
                ('doctor_lname', models.CharField(blank=True, db_column='doctor_Lname', max_length=64, null=True)),
                ('doctor_phone', models.CharField(blank=True, max_length=64, null=True)),
                ('doctor_street', models.CharField(blank=True, max_length=64, null=True)),
                ('doctor_city', models.CharField(blank=True, max_length=64, null=True)),
                ('doctor_username', models.CharField(max_length=64, unique=True)),
                ('doctor_gmail', models.CharField(max_length=100, unique=True)),
                ('doctor_password', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'doctor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DoctorSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_speciality', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'doctor_specialization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('nurse_id', models.IntegerField(primary_key=True, serialize=False)),
                ('nurse_fname', models.CharField(blank=True, db_column='nurse_Fname', max_length=64, null=True)),
                ('nurse_lname', models.CharField(blank=True, db_column='nurse_Lname', max_length=64, null=True)),
                ('nurse_phone', models.CharField(blank=True, max_length=64, null=True)),
                ('nurse_gender', models.CharField(blank=True, max_length=64, null=True)),
                ('nurse_username', models.CharField(max_length=64, unique=True)),
                ('nurse_gmail', models.CharField(max_length=100, unique=True)),
                ('nurse_password', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'nurse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sanatorium',
            fields=[
                ('sanatorium_id', models.IntegerField(primary_key=True, serialize=False)),
                ('sanatorium_name', models.CharField(blank=True, max_length=64, null=True)),
                ('sanatorium_phone', models.CharField(blank=True, max_length=64, null=True)),
                ('sanatorium_street', models.CharField(blank=True, max_length=64, null=True)),
                ('sanatorium_city', models.CharField(blank=True, max_length=64, null=True)),
                ('sanatorium_username', models.CharField(max_length=64, unique=True)),
                ('sanatorium_gmail', models.CharField(max_length=100, unique=True)),
                ('sanatorium_password', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'sanatorium',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_fname', models.CharField(blank=True, db_column='user_Fname', max_length=64, null=True)),
                ('user_lname', models.CharField(blank=True, db_column='user_Lname', max_length=64, null=True)),
                ('user_ssn', models.CharField(blank=True, db_column='user_SSN', max_length=64, null=True)),
                ('user_birthdate', models.CharField(blank=True, max_length=64, null=True)),
                ('user_phone', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('user_street', models.CharField(blank=True, max_length=64, null=True)),
                ('user_city', models.CharField(blank=True, max_length=64, null=True)),
                ('user_gender', models.CharField(blank=True, max_length=64, null=True)),
                ('user_username', models.CharField(max_length=64, unique=True)),
                ('user_gmail', models.CharField(max_length=100, unique=True)),
                ('user_password', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DoctorAppointment',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='base.user')),
                ('appointment_status', models.CharField(blank=True, max_length=64, null=True)),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('appointment_time', models.TimeField(blank=True, null=True)),
                ('illness_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'doctor_appointment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='base.user')),
                ('medicine_id', models.IntegerField()),
                ('medicine_istaken', models.CharField(blank=True, db_column='medicine_isTaken', max_length=64, null=True)),
                ('medicine_description', models.TextField(blank=True, null=True)),
                ('medicine_intaketime', models.TimeField(blank=True, db_column='medicine_inTakeTime', null=True)),
            ],
            options={
                'db_table': 'medicine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='base.user')),
                ('message_id', models.IntegerField()),
                ('message_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NurseAppointment',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='base.user')),
                ('appointment_status', models.CharField(blank=True, max_length=64, null=True)),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('appointment_time', models.TimeField(blank=True, null=True)),
                ('illness_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'nurse_appointment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SanatoriumAppointment',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='base.user')),
                ('appointment_status', models.CharField(blank=True, max_length=64, null=True)),
                ('appointment_date', models.DateField(blank=True, null=True)),
                ('appointment_time', models.TimeField(blank=True, null=True)),
                ('illness_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sanatorium_appointment',
                'managed': False,
            },
        ),
    ]
